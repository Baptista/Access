@model ClientAcess.Models.Kms.KmsModel

@{
    ViewData["Title"] = "Kms";
    var months = new[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" };
}

<h2>@ViewData["Title"]</h2>

<form id="consultancyForm">
    <div class="form-group">
        <label for="name">Name:</label>
        <input type="text" class="form-control" id="name" name="name" required>
    </div>
    <div class="form-group">
        <label for="licensePlate">License Plate (XX-XX-XX):</label>
        <input type="text" class="form-control" id="licensePlate" name="licensePlate" pattern="[A-Za-z0-9]{2}-[A-Za-z0-9]{2}-[A-Za-z0-9]{2}" required>
    </div>
    <div class="form-group">
        <label for="year">Year:</label>
        <input type="number" class="form-control" id="year" name="year" value="@Model.Year" required>
    </div>
    <div class="form-group">
        <label for="month">Month:</label>
        <select class="form-control" id="month" name="month" required>
            @for (int i = 0; i < months.Length; i++)
            {
                if (i + 1 == Model.Month)
                {
                    <option value="@(i + 1)" selected>@months[i]</option>
                }
                else
                {
                    <option value="@(i + 1)">@months[i]</option>
                }
            }
        </select>
    </div>

    <table class="table table-bordered" id="KmsTable">
        <thead>
            <tr>
                <th>Day</th>
                <th>Day of Week</th>
                <th>Departure</th>
                <th>Arrive</th>
                <th>Justification</th>
                <th>Kms</th>
            </tr>
        </thead>
        <tbody>
            <!-- Rows will be dynamically added here -->
        </tbody>
    </table>

    <div class="text-right mb-3">
        <strong>Total Kms for the Month: <span id="totalKms">0</span></strong>
    </div>

    <button type="button" class="btn btn-success" id="generatePdf">Generate PDF</button>
</form>

@section Scripts {
    <script>
        $(document).ready(function() {
            function getDaysInMonth(year, month) {
                return new Date(year, month, 0).getDate();
            }

            function getDayOfWeek(year, month, day) {
                const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
                return daysOfWeek[new Date(year, month - 1, day).getDay()];
            }

            function isWeekend(dayOfWeek) {
                return dayOfWeek === 'Saturday' || dayOfWeek === 'Sunday';
            }

            function updateTable() {
                const year = parseInt($('#year').val());
                const month = parseInt($('#month').val());
                const daysInMonth = getDaysInMonth(year, month);

                let tableContent = '';
                for (let day = 1; day <= daysInMonth; day++) {
                    const dayOfWeek = getDayOfWeek(year, month, day);
                    const isWeekendDay = isWeekend(dayOfWeek);
                    tableContent += `
                        <tr class="${isWeekendDay ? 'table-secondary' : ''}">
                            <td>${day}</td>
                            <td>${dayOfWeek}</td>
                            <td>${isWeekendDay ? '' : `<input type="text" class="form-control departure" name="departure${day}" value="Odivelas/Setubal">`}</td>
                            <td>${isWeekendDay ? '' : `<input type="text" class="form-control arrive" name="arrive${day}" value="Setubal/Odivelas">`}</td>
                            <td>${isWeekendDay ? '' : `<input type="text" class="form-control justification" name="justification${day}" value="Consultadoria">`}</td>
                            <td>${isWeekendDay ? '' : `<input type="number" class="form-control kms" name="kms${day}" value="40">`}</td>
                        </tr>
                    `;
                }
                $('#KmsTable tbody').html(tableContent);
                updateTotalKms();
            }

            function updateTotalKms() {
                let total = 0;
                $('.kms').each(function() {
                    total += parseInt($(this).val()) || 0;
                });
                $('#totalKms').text(total);
            }

            $('#year, #month').change(updateTable);
            $(document).on('change', '.kms', updateTotalKms);

            $('#generatePdf').click(function() {
                const name = $('#name').val();
                const licensePlate = $('#licensePlate').val();
                const year = parseInt($('#year').val());
                const month = parseInt($('#month').val());
                const kmsData = [];

                $('#KmsTable tbody tr').each(function() {
                    const row = $(this);
                    const day = parseInt(row.find('td:first').text());
                    const dayOfWeek = row.find('td:eq(1)').text();
                    const departure = row.find('.departure').val() || "";
                    const arrive = row.find('.arrive').val() || "";
                    const justification = row.find('.justification').val() || "";
                    const kms = parseInt(row.find('.kms').val()) || 0;

                    if (departure || arrive || justification || kms) {
                        kmsData.push({
                            Day: day,
                            DayOfWeek: dayOfWeek,
                            Departure: departure,
                            Arrive: arrive,
                            Justification: justification,
                            Kms: kms
                        });
                    }
                });

                const data = {
                    Name: name,
                    LicensePlate: licensePlate,
                    Year: year,
                    Month: month,
                    KmsData: kmsData
                };

                console.log('Sending data:', JSON.stringify(data, null, 2));

                $.ajax({
                    url: '/Kms/ExportToPdf',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    xhrFields: {
                        responseType: 'blob'
                    },
                    success: function(response) {
                        const blob = new Blob([response], { type: 'application/pdf' });
                        const link = document.createElement('a');
                        link.href = window.URL.createObjectURL(blob);
                        link.download = `${name}_${licensePlate}_${year}_${$('#month option:selected').text()}_Consultancy.pdf`;
                        link.click();
                    },
                    error: function(xhr, status, error) {
                        console.error('Error details:', xhr.responseText);
                        alert('Error generating PDF: ' + error);
                    }
                });
            });

            // Initialize the table
            updateTable();
        });
    </script>
}